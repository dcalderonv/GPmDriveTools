<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>